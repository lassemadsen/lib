#!/usr/bin/env python
import argparse
import os
import numpy as np
from visbrain.objects import BrainObj

def main(args):
    """
    Convertex minc .obj file (such as the mni surface templates) to npz files compatible with visbrain
    """

    in_obj = args.input_obj

    if args.output[0] == '/': # If complete path
        output = args.output
    else: # If relative path. Avoid output being save to visbrain_data folder
        output = f'{os.getcwd()}/{args.output}'

    with open(in_obj, 'r') as fs:
        data = fs.read().splitlines()

    nV = int(data[0].split(' ')[-1])

    vertex = data[1:nV+1]
    normals = data[nV+2:nV*2+2]
    faces = data[-1]

    vertex = np.array([np.fromstring(v, sep=' ') for v in vertex])
    normals = np.array([np.fromstring(n, sep=' ') for n in normals])
    faces = np.array([int(f) for f in faces.split()])
    faces = faces.reshape(int(len(faces)/3), 3)

    b_obj_custom = BrainObj(output, vertices=vertex, faces=faces, normals=normals, translucent=False)
    b_obj_custom.save()

    print(f'{output}.npz saved.')

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('input_obj', help='The obj file that should be convertexed to npz (visbrain) format')
    parser.add_argument('output', help='Complete path of output filename without .npz extension.')
    args = parser.parse_args()
    main(args)